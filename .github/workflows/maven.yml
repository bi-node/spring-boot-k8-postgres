name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-postgres:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube  # Create directory for Kubeconfig
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config  # Write Kubeconfig to file

      - name: Deploy PostgreSQL
        run: |
          kubectl apply -f deployment/postgres-secret.yaml
          kubectl apply -f deployment/postgres-config.yaml
          kubectl apply -f deployment/postgres-init.yaml
          kubectl apply -f deployment/postgres.yaml

      - name: Wait for PostgreSQL to be ready
        run: |
          kubectl rollout status deployment/postgres-deployment
          kubectl wait --for=condition=ready pod -l app=postgres --timeout=300s

  build-and-push:
    runs-on: ubuntu-latest
    needs: deploy-postgres

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # Specify the JDK distribution
          cache: maven
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true

      - name: Build with Maven
        run: mvn clean package

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: binodleo/spring-pod
          tags: 1.0
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy-spring:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube  # Create directory for Kubeconfig
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config  # Write Kubeconfig to file

      - name: Deploy Spring Boot application
        run: |
          kubectl apply -f deployment/web-app-config.yaml
          kubectl apply -f deployment/web-app.yaml
